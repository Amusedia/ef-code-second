//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using Data.Entities;

namespace Data.Repositories
{
    public partial class ApplicationRepository : IDbSet<Application>
    {
        private readonly DbSet<Application> _dbSet;
    
        internal ApplicationRepository(DbSet<Application> dbSet)
        {
    		_dbSet = dbSet;
        }
        
    	public Application Add(Application entity)
    	{
     		return _dbSet.Add(entity);
    	}
    
    	public Application Attach(Application entity)
    	{
     		return _dbSet.Attach(entity);
    	}
    
    	public Application Create()
    	{
     		return _dbSet.Create();
    	}
    
        TDerivedEntity IDbSet<Application>.Create<TDerivedEntity>()
        {
            return _dbSet.Create<TDerivedEntity>();
        }
    
    	public Application Find(params object[] keyValues)
    	{
     		return _dbSet.Find(keyValues);
    	}
    
    	public System.Collections.ObjectModel.ObservableCollection<Application> Local
    	{
    		get { return _dbSet.Local; }
    	}
    
    	public Application Remove(Application entity)
    	{
    		return _dbSet.Remove(entity);
    	}
    
        public Type ElementType
        {
            get { return ((IQueryable)_dbSet).ElementType; }
        }
    
        public System.Linq.Expressions.Expression Expression
        {
            get { return ((IQueryable)_dbSet).Expression; }
        }
    
        public System.Linq.IQueryProvider Provider
        {
            get { return ((IQueryable)_dbSet).Provider; }
        }
    
        public IEnumerator<Application> GetEnumerator()
        {
            return ((IEnumerable<Application>) _dbSet).GetEnumerator();
        }
    
        IEnumerator IEnumerable.GetEnumerator()
        {
            return ((IEnumerable) _dbSet).GetEnumerator();
        }
    }
    
}
